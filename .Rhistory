left_join(islands, by = c("predicts" = "island", "species")) %>%
rename(predict_prop = prop) %>%
group_by(model, predicts) %>%
summarize(q = list(model_prop),
p = list(predict_prop),
.groups = "drop") %>%
mutate(kl_distance = map2_dbl(p, q, d_kl))
crossing(model = paste("Island", 1:3),
predicts = paste("Island", 1:3)) %>%
filter(model != predicts)
library(tidyverse)
library(rethinking)
library(tidybayes)
library(brms)
theme_set(theme_light())
library(dagitty)
library(ggdag)
hma_dag <- dagitty("dag{H -> M <- A}")
coordinates(hma_dag) <- list(x = c(H = 1, M = 2, A = 3),
y = c(H = 1, M = 1, A = 1))
ggplot(hma_dag, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_text(color = "black", size = 10) +
geom_dag_edges(edge_color = "black", edge_width = 2,
arrow_directed = grid::arrow(length = grid::unit(15, "pt"),
type = "closed")) +
theme_void()
d <- sim_happiness(seed = 1977, N_years = 1000)
dat <- d %>%
filter(age > 17) %>%
mutate(a = (age - 18) / (65 - 18),
mid = factor(married + 1, labels = c("single", "married")))
b6.9 <- brm(happiness ~ 0 + mid + a,
data = dat, family = gaussian,
prior = c(prior(normal(0, 1), class = b, coef = midmarried),
prior(normal(0, 1), class = b, coef = midsingle),
prior(normal(0, 2), class = b, coef = a),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h4-6.9"))
b6.10 <- brm(happiness ~ 1 + a,
data = dat, family = gaussian,
prior = c(prior(normal(0, 1), class = Intercept),
prior(normal(0, 2), class = b, coef = a),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h4-6.10"))
d
b6.9 <- add_criterion(b6.9, criterion = "loo")
b6.10 <- add_criterion(b6.10, criterion = "loo")
loo_compare(b6.9, b6.10)
adjustmentSets(hma_dag, exposure = "A", outcome = "H")
## **5**
data(foxes)
foxes
fox_dat <- foxes %>%
as_tibble() %>%
select(-group) %>%
mutate(across(everything(), standardize))
WAvGA <- dagitty("dag{
W <- Av <- G <- A
Av <- A}")
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 2, A = 3),
y = c(W = 1, Av = 2, G = 3, A = 2))
ggplot(WAvGA, aes(x = x, y = y, x = xend, y = yend)) +
geom_dag_text(color = "black", size = 10) +
geom_dag_edges(edge_color = "black", edge_width = 2,
arrow_directed = grid::arrow(length = grid::unit(15, "pt"),
type = "closed")) +
theme_void()
WAvGA <- dagitty("dag{
W <- Av <- G <- A
Av <- A}")
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 2, A = 3),
y = c(W = 1, Av = 2, G = 3, A = 2))
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 2, A = 3),
y = c(W = 1, Av = 2, G = 3, A = 2))
ggplot(WAvGA, aes(x = x, y = y, x = xend, y = yend)) +
geom_dag_text(color = "black", size = 10) +
geom_dag_edges(edge_color = "black", edge_width = 2,
arrow_directed = grid::arrow(length = grid::unit(15, "pt"),
type = "closed")) +
theme_void()
drawdag(WAvGA)
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 2, A = 3),
y = c(W = 3, Av = 2, G = 1, A = 2))
drawdag(WAvGA)
b7h5_1 <- brm(weight ~ 1 + avgfood + groupsize + area,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_1"))
# avgfood + groupsize
b7h5_2 <- brm(weight ~ 1 + avgfood + groupsize,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_2"))
# groupsize + area
b7h5_3 <- brm(weight ~ 1 + groupsize + area,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_3"))
# avgfood
b7h3_4 <- brm(weight ~ 1 + avgfood,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_4")))
# avgfood
b7h5_4 <- brm(weight ~ 1 + avgfood,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_4"))
#  area
b7h5_5 <- brm(weight ~ 1 + area,
data = fox_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 123,
file = here::here("fits", "chp7", "b7h5_5"))
b7h5_1 <- add_criterion(b7h5_1, criterion = "waic")
b7h5_2 <- add_criterion(b7h5_2, criterion = "waic")
b7h5_3 <- add_criterion(b7h5_3, criterion = "waic")
b7h5_4 <- add_criterion(b7h5_4, criterion = "waic")
b7h5_5 <- add_criterion(b7h5_5, criterion = "waic")
comp <- loo_compare(b7h5_1, b7h5_2, b7h5_3, b7h5_4, b7h5_5, criterion = "waic")
comp
plot_comp <- comp %>%
as_tibble(rownames = "model") %>%
mutate(across(-model, as.numeric),
model = fct_inorder(model))
plot_comp
waic_val <- plot_comp %>%
select(model, waic, se = se_waic) %>%
mutate(lb = waic - se,
ub = waic + se)
waic_val
waic_val <- plot_comp %>%
select(model, waic, se = se_waic) %>%
mutate(lb = waic - se,
ub = waic + se)
diff_val <- plot_comp %>%
select(model, waic, se = se_diff) %>%
mutate(se = se * 2) %>%
mutate(lb = waic - se,
ub = waic + se) %>%
filter(se != 0)
diff_val
ggplot() +
geom_pointrange(data = waic_val, mapping = aes(x = waic, xmin = lb, xmax = ub,
y = fct_rev(model))) +
geom_pointrange(data = diff_val, mapping = aes(x = waic, xmin = lb, xmax = ub,
y = fct_rev(model)),
position = position_nudge(y = 0.2), shape = 2,
color = "#009FB7") +
labs(x = "Deviance", y = NULL)
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 3, A = 2),
y = c(W = 3, Av = 2, G = 1, A = 3))
WAvGA <- dagitty("dag{
W <- Av -> G -> W
Av <- A}")
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 3, A = 2),
y = c(W = 3, Av = 2, G = 1, A = 3))
drawdag(WAvGA)
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 3, A = 2),
y = c(W = 3, Av = 2, G = 1, A = 1))
drawdag(WAvGA)
coordinates(WAvGA) <- list(x = c(W = 2, Av = 1, G = 3, A = 2),
y = c(W = 3, Av = 2, G = 2, A = 1))
drawdag(WAvGA)
library(dagitty)
GRC_U <- dagitty("dag{
U [unobserved]
U -> R -> G <- C
U -> G
}")
coordinates(GRC_U) <- list(
x = c(U = 2, R = 1, G = 2, C = 3),
y = c(U = 2, R = 1, G = 1, C = 1)
)
drawdag(GRC_U)
library(ggdag)
drawdag(GRC_U)
library(rethinking)
drawdag(GRC_U)
data(rugged)
d <- rugged
# make log version of outcome
d$log_gdp <- log( d$rgdppc_2000 )
# extract countries with GDP data
dd <- d[ complete.cases(d$rgdppc_2000) , ]
d
# extract countries with GDP data
dd <- d[ complete.cases(d$rgdppc_2000) , ]
dd
d
dd
# rescale variables
dd$log_gdp_std <- dd$log_gdp / mean(dd$log_gdp)
dd$rugged_std <- dd$rugged / max(dd$rugged)
m8.1 <- quap(
alist(
log_gdp_std ~ dnorm( mu , sigma ) ,
mu <- a + b*( rugged_std - 0.215 ) ,
a ~ dnorm( 1 , 1 ) ,
b ~ dnorm( 0 , 1 ) ,
sigma ~ dexp( 1 )
) , data=dd )
set.seed(7)
prior <- extract.prior( m8.1 )
# set up the plot dimensions
plot( NULL , xlim=c(0,1) , ylim=c(0.5,1.5) ,
xlab="ruggedness" , ylab="log GDP" )
abline( h=min(dd$log_gdp_std) , lty=2 )
abline( h=max(dd$log_gdp_std) , lty=2 )
# draw 50 lines from the prior
rugged_seq <- seq( from=-0.1 , to=1.1 , length.out=30 )
mu <- link( m8.1 , post=prior , data=data.frame(rugged_std=rugged_seq) )
for ( i in 1:50 ) lines( rugged_seq , mu[i,] , col=col.alpha("black",0.3) )
sum( abs(prior$b) > 0.6 ) / length(prior$b)
m8.1 <- quap(
alist(
log_gdp_std ~ dnorm( mu , sigma ) ,
mu <- a + b*( rugged_std - 0.215 ) ,
a ~ dnorm( 1 , 0.1 ) ,
b ~ dnorm( 0 , 0.3 ) ,
sigma ~ dexp(1)
) , data=dd )
precis( m8.1 )
# make variable to index Africa (1) or not (2)
dd$cid <- ifelse( dd$cont_africa==1 , 1 , 2 )
m8.2 <- quap(
alist(
log_gdp_std ~ dnorm( mu , sigma ) ,
mu <- a[cid] + b*( rugged_std - 0.215 ) ,
a[cid] ~ dnorm( 1 , 0.1 ) ,
b ~ dnorm( 0 , 0.3 ) ,
sigma ~ dexp( 1 )
) , data=dd )
compare( m8.1 , m8.2 )
precis( m8.2 , depth=2 )
post <- extract.samples(m8.2)
diff_a1_a2 <- post$a[,1] - post$a[,2]
PI( diff_a1_a2 )
post
rugged.seq <- seq( from=-0.1 , to=1.1 , length.out=30 )
# compute mu over samples, fixing cid=2 and then cid=1
mu.NotAfrica <- link( m8.2 ,
data=data.frame( cid=2 , rugged_std=rugged.seq ) )
mu.Africa <- link( m8.2 ,
data=data.frame( cid=1 , rugged_std=rugged.seq ) )
# summarize to means and intervals
mu.NotAfrica_mu <- apply( mu.NotAfrica , 2 , mean )
mu.NotAfrica_ci <- apply( mu.NotAfrica , 2 , PI , prob=0.97 )
mu.Africa_mu <- apply( mu.Africa , 2 , mean )
mu.Africa_ci <- apply( mu.Africa , 2 , PI , prob=0.97 )
mu.NotAfrica_mu
mu.NotAfrica_ci
mu.Africa_mu
mu.Africa_ci
m8.3 <- quap(
alist(
log_gdp_std ~ dnorm( mu , sigma ) ,
mu <- a[cid] + b[cid]*( rugged_std - 0.215 ) ,
a[cid] ~ dnorm( 1 , 0.1 ) ,
b[cid] ~ dnorm( 0 , 0.3 ) ,
sigma ~ dexp( 1 )
) , data=dd )
precis( m8.5 , depth=2 )
precis( m8.3 , depth=2 )
compare( m8.1 , m8.2 , m8.3 , func=PSIS )
plot( PSIS( m8.3 , pointwise=TRUE )$k )
m8.3t <- quap(
alist(
log_gdp_std ~ dt( mu , sigma ) ,
mu <- a[cid] + b[cid]*( rugged_std - 0.215 ) ,
a[cid] ~ dnorm( 1 , 0.1 ) ,
b[cid] ~ dnorm( 0 , 0.3 ) ,
sigma ~ dexp( 1 )
) , data=dd )
compare(m8.3, m8.3t)
compare(m8.3, m8.3t, func = PSIS)
m8.3t <- quap(
alist(
log_gdp_std ~ dstudent( mu , sigma ) ,
mu <- a[cid] + b[cid]*( rugged_std - 0.215 ) ,
a[cid] ~ dnorm( 1 , 0.1 ) ,
b[cid] ~ dnorm( 0 , 0.3 ) ,
sigma ~ dexp( 1 )
) , data=dd )
compare(m8.3, m8.3t, func = PSIS)
# plot Africa - cid=1
d.A1 <- dd[ dd$cid==1 , ]
plot( d.A1$rugged_std , d.A1$log_gdp_std , pch=16 , col=rangi2 ,
xlab="ruggedness (standardized)" , ylab="log GDP (as proportion of mean)" ,
xlim=c(0,1) )
mu <- link( m8.3 , data=data.frame( cid=1 , rugged_std=rugged_seq ) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
lines( rugged_seq , mu_mean , lwd=2 )
shade( mu_ci , rugged_seq , col=col.alpha(rangi2,0.3) )
mu_mean
mtext("African nations")
# plot non-Africa - cid=2
d.A0 <- dd[ dd$cid==2 , ]
plot( d.A0$rugged_std , d.A0$log_gdp_std , pch=1 , col="black" ,
xlab="ruggedness (standardized)" , ylab="log GDP (as proportion of mean)" ,
xlim=c(0,1) )
mu <- link( m8.3 , data=data.frame( cid=2 , rugged_std=rugged_seq ) )
mu_mean <- apply( mu , 2 , mean )
mu_ci <- apply( mu , 2 , PI , prob=0.97 )
lines( rugged_seq , mu_mean , lwd=2 )
shade( mu_ci , rugged_seq )
mtext("Non-African nations")
rugged_seq <- seq(from=-0.2,to=1.2,length.out=30)
muA <- link( m8.3 , data=data.frame(cid=1,rugged_std=rugged_seq) )
muN <- link( m8.3 , data=data.frame(cid=2,rugged_std=rugged_seq) )
delta <- muA - muN
rugged_seq
muA
source("D:/R/Statistical Rethinking/chapter8_study.R", echo=TRUE)
delta
set.seed(17)
N <- 2000
library(rethinking)
G <- sample(1:2, size = N, replace = TRUE)
u <- rbern(N, 0.1)
D <- rbern(N, ifelse(G == 1, u * 0.5, 0.8)) + 1
accept_rate_u0 <- matrix(c(0.1, 0.1, 0.1, 0.3), nrow = 2)
accept_rate_u1 <- matrix(c(0.2, 0.3, 0.2, 0.5), nrow = 2)
p <- sapply(1:N, function(i)
ifelse(u[i] == 0, accept_rate_u0[D[i], G[i]],
accept_rate_u1[D[i], G[i]]))
A <- rbern(N, p)
dat_sim <- list(A =  A, D = D, G = G)
# total effect gender
m1 <- ulam(
alist(
A ~ bernoulli(p),
logit(p) <- a[G],
a[G] ~ normal(0, 1)
), data = dat_sim, chains = 4, cores = 4
)
# direct effects - now confounded!
m2 <- ulam(
alist(
A ~ bernoulli(p),
logit(p) <- a[G, D],
matrix[G, D]:a ~ normal(0, 1)
), data = dat_sim, chains = 4, cores = 4
)
post2 <- extract.samples(m2)
post2$fm_contrast_D1 <- post2$a[, 1, 1] - post2$a[, 2, 1]
post2$fm_contrast_D2 <- post2$a[, 1, 2] - post2$a[, 2, 2]
# if we could measure u
dat_sim$u <- u
m3 <- ulam(
alist(
A ~ bernoulli(p),
logit(p) <- a[G, D] + buA*u,
matrix[G, D]:a ~ normal(0, 1),
buA ~ normal(0, 1)
), data = dat_sim, constraints = list(buA = "lower=0"), chains = 4, cores = 4
)
post3 <- extract.samples(m3)
post3$fm_contrast_D1 <- post3$a[, 1, 1] - post3$a[, 2, 1]
post3$fm_contrast_D2 <- post3$a[, 1, 2] - post3$a[, 2, 2]
T1 <- rnorm(N, u, 0.1)
T2 <- rnorm(N, u, 0.5)
T3 <- rnorm(N, u, 0.25)
m4 <- ulam(
alist(
# A model
A ~ bernoulli(p),
logit(p) <- a[G, D] + b*u[i],
matrix[G, D]:a ~ normal(0, 1),
b ~ normal(0, 1),
# u and T model
vector[N]:u ~ normal(0, 1),
T1 ~ normal(u, tau[1]),
T2 ~ normal(u, tau[2]),
T3 ~ normal(u, tau[3]),
vector[3]:tau ~ exponential(1)
), data = dat_sim, chains = 4, cores = 4, constraints = list(b = "lower=0")
)
install.packages("fpp3")
data(vic_elec)
library(fpp3)
data(vic_elec)
View(vic_elec)
str(vic_elec)
View(vic_elec)
vic_elec %>%
group_by(Date) %>%
summarize(total = sum(Demand))
View(vic_elec)
vic_elec %>%
arrange(Date) %>%
group_by(Date) %>%
summarize(total = sum(Demand))
vic_elec %>%
mutate(Date = as.Date(Time)) %>%
group_by(Date) %>%
summarise(total = sum(Demand))
vic_elec %>%
mutate(Date = as.Date(Time)) %>%
index_by(index = Date)
vic_elec %>%
mutate(Date = as.Date(Time)) %>%
index_by(index = Date) %>%
summarise(total = sum(Demand))
vic_elec %>%
mutate(Date = as.Date(Date))
vic_elec %>%
index_by(index = Date) %>%
summarise(total = sum(Demand))
typeof(vic_elec)
str(vic_elec)
vic_elec
vic_elec %>%
index_by(index = Date) %>%
summarise(demand_daily = sum(Demand),
avg_temp = mean(Temperature))
daily_vic_elect <- vic_elec %>%
index_by(index = Date) %>%
summarise(demand_daily = sum(Demand),
avg_temp = mean(Temperature)) %>%
ggplot(aes())
daily_vic_elec <- vic_elec %>%
index_by(index = Date) %>%
summarise(demand_daily = sum(Demand),
avg_temp = mean(Temperature)) %>%
ggplot(aes())
daily_vic_elec <- vic_elec %>%
index_by(index = Date) %>%
summarise(demand_daily = sum(Demand),
avg_temp = mean(Temperature))
daily_vic_elec %>%
autoplot(demand_daily)
vic_elec %>%
index_by(index = Date)
daily_vic_elec %>%
ggplot(aes(x = demand_daily, y = avg_temp)) +
geom_point()
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point()
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1)
daily_vic_elec %>% ACF(demand_daily, lag_max = 1)
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1) %>%
theme_light()
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1) +
theme_light()
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 3) +
theme_light()
daily_vic_elec %>%
ggplot(aes(x = avg_temp, y = demand_daily)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1) +
theme_light()
daily_vic_elec %>%
mutate(lag_demand_daily = lag(demand_daily))
daily_vic_elec %>%
mutate(lag_demand_daily = lag(demand_daily)) %>%
ggplot(aes(x = lag_demand_daily, y = demand_daily)) +
geom_point() +
#  stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1) +
theme_light()
library(rethinking)
data(Trolley)
d <- Trolley
str(d)
dat <- list(
R = d$response,
A = d$action,
I = d$intention,
C = d$contact
)
mRX <- ulam(
alist(
R ~ dordlogit(phi, alpha),
phi <- bA*A + bI*I + bC*C,
c(bA, bI, bC) ~ normal(0, 0.5),
alpha ~ normal(0, 1)
), data = dat
)
vals <- c(0, 0, 0)
